info(
	title: "user-api"
	desc: "user api betxin.one"
	author: "lixin"
	email: @betixn.one
	version: 1.0
)

// 定义没有jwt的api 主要是用户认证
@server(
	group: oauth
	prefix: /api/v1
)
service xinclockin-api {
	@doc(
		summary: 定义用户认证接口
	)
	@handler SigninHandler
	post /user/signin (SigninReq) returns (SigninResp)
}

// 定义已经没有jwt的api
@server(
	group: user
	prefix: /api/v1
	middleware: Admin
)
service xinclockin-api {
	@doc(
		summary: 创建一个用户
	)
	@handler CreateUserHandler
	post /user (CreateUserReq)
}

// 定义已经有jwt的api
@server(
	jwt: Auth
	group: user
	prefix: /api/v1
)
service xinclockin-api {
	@doc(
		summary: "根据用户uid去获取用户信息"
	)
	@handler GetUserHandler
	get /user returns (User)
}

// 定义管理员用户权限
@server(
	jwt: Auth
	group: user
	prefix: /api/v1/admin
	middleware: Admin
)
service xinclockin-api {
	@doc(
		summary: 查看用户列表
	)
	@handler GetUserListHandler
	get /user returns ([]User)
}

type SigninReq {
	LoginMethod string `json:"login_method"`
	MixinToken  string `json:"mixin_token,optional"`
	Sign        string `json:"sign,optional"`
	SignedMsg   string `json:"sign_msg,optional"`
}

type SigninResp {
	Token string `json:"token"`
}

type User {
	IdentityNumber string `json:"identity_number"`
	Uid            string `json:"uid"`
	FullName       string `json:"full_name"`
	AvatarUrl      string `json:"avatar_url"`
	Biography      string `json:"biography"`
	CreatedAt      string `json:"created_at"`
	UpdatedAt      string `json:"updated_at"`
}

type CreateUserReq {
	IdentityNumber string `json:"identity_number"`
	Uid            string `json:"uid"`
	FullName       string `json:"full_name"`
	AvatarUrl      string `json:"avatar_url"`
	Biography      string `json:"biography"`
}